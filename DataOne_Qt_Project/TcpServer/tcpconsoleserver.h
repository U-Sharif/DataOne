#ifndef TCPCONSOLESERVER_H
#define TCPCONSOLESERVER_H

#include <QTcpServer>
#include <QBuffer>
#include <QHostAddress>
#include <QTimer>

#include "../Settings/settings.h"
#include "../TcpClient/tcpconsoleclient.h"

// This class provides a TCP server for connecting clients to this application over network.
// TcpConsoleServer runs in the main thread.
// This class inherits QTcpServer of Qt framework, which provides functionality for making TcpServers.

class TcpConsoleServer : public QTcpServer
{
    // QObject delarator for enabling this class to use Qt framework's Signal/Slot mechanism.
    Q_OBJECT

public:
    // Class constructor.
    explicit TcpConsoleServer(QObject *parent = 0);

    // Pointer to System Settings object.
    // There is only one SystemSettings object in  the whole application which is in the main thread.
    DataOneSettings *SystemSettings;

    // Buffer to hold the previous log entries.
    QBuffer *LogBuffer;

    // Funtion to launch the Tcp server.
    void StartServer();

private:

    // Tcp Port for listening.
    quint16 TcpServerPort;

    // Keep clients count.
    int MaximumConnectedClients;
    int ConnectedClients;

    // Pointer for creating new console client threads.
    TcpConsoleClient *newConsoleClient;

    // Timer to check server running status regularly.
    QTimer ServerStatusCheckTimer;

    // Current reader antennas state.
    QString AntennaState;


protected:

    // QTcpServer override. Handles incoming tcp connections.
    void incomingConnection(int socketDescriptor);

signals:
    void Log(QString, QString);         // Send log to main thread.
    void NewLogAvailable(QByteArray);   // Singal to send new log to all clients.
    void Command_GetRunningTime();      // Signal to send the application running time.
    void UpdateAntennaState(QString);   // Signal for updating current antenna state to client threads.
    void ClientCommand(QByteArray);     // Signal to send clinet commands to reader thread.

    void DataOneShutdown();             // Signal for other threads, clean exit.

public slots:
    void SendNewLog(QByteArray newLog); // Function to receive new log from main thread into the Tcp server.
    void SendApplicationRunningTime();  // Function for sending the application running time.
    void StoreAntennaState(QString);    // Slot to receive & store the current antennas state.

    // Slot for initiating shutdown sequence.
    void Shutdown();


private slots:
    void DecrementConnectedClientsCount();          // Slot to decrease the connected clinets count on a client thread exit.
    void LogFromChildThread(QString, QString);      // Slot to handle logs generated by clint threads.
    void CheckServerStatus();                       // Slot to check server status regularly.
    void CommandFromChildThread(QByteArray);        // Slot to receive commands from console client threads.


};

#endif // TCPCONSOLESERVER_H
